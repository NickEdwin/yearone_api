---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=DONT_SHARE_MY_MOVIE_DATA_BASE_API_KEY&language=en-US&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type:
      - application/json;charset=utf-8
      transfer-encoding:
      - chunked
      connection:
      - keep-alive
      date:
      - Mon, 16 Nov 2020 16:30:04 GMT
      server:
      - openresty
      access-control-allow-origin:
      - "*"
      access-control-allow-methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      access-control-expose-headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      cache-control:
      - public, max-age=21600
      vary:
      - Accept-Encoding
      x-cache:
      - Hit from cloudfront
      via:
      - 1.1 9c7e5857d78c5dc89042979317de5843.cloudfront.net (CloudFront)
      x-amz-cf-pop:
      - DEN50-C2
      x-amz-cf-id:
      - V3GDuFqCrSME1xLKS3YpkXLSoRTDAHzYuvegx9CyHoDqHAoj1mX1iA==
      age:
      - '20780'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 16 Nov 2020 22:16:24 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=DONT_SHARE_MY_MOVIE_DATA_BASE_API_KEY&language=en-US&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type:
      - application/json;charset=utf-8
      transfer-encoding:
      - chunked
      connection:
      - keep-alive
      date:
      - Mon, 16 Nov 2020 16:30:05 GMT
      server:
      - openresty
      access-control-allow-origin:
      - "*"
      access-control-allow-methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      access-control-expose-headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      cache-control:
      - public, max-age=21600
      vary:
      - Accept-Encoding
      x-cache:
      - Hit from cloudfront
      via:
      - 1.1 e1b5abb53c407f0a057625c46693461d.cloudfront.net (CloudFront)
      x-amz-cf-pop:
      - DEN50-C2
      x-amz-cf-id:
      - Y0vE-uE1ZlttEGD6JZRAQ_D6hiyUXCIofDUsCJ_rVkbxxZNGkchTag==
      age:
      - '20779'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 16 Nov 2020 22:16:24 GMT
recorded_with: VCR 6.0.0

---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=DONT_SHARE_MY_MOVIE_DATA_BASE_API_KEY&page=1&query=Spider+Man
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type:
      - application/json;charset=utf-8
      transfer-encoding:
      - chunked
      connection:
      - keep-alive
      date:
      - Mon, 16 Nov 2020 22:16:24 GMT
      server:
      - openresty
      access-control-allow-origin:
      - "*"
      access-control-allow-methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      access-control-expose-headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      cache-control:
      - public, max-age=120
      vary:
      - Accept-Encoding
      x-cache:
      - Miss from cloudfront
      via:
      - 1.1 264cccdb967e804907074b11d3a83242.cloudfront.net (CloudFront)
      x-amz-cf-pop:
      - DEN50-C2
      x-amz-cf-id:
      - 2nLE1nznO2IM1B43li6_Ccic_SJaTDpCim75Gqao94Nt1tcGGrMQ9Q==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 16 Nov 2020 22:16:24 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=DONT_SHARE_MY_MOVIE_DATA_BASE_API_KEY&page=2&query=Spider+Man
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type:
      - application/json;charset=utf-8
      transfer-encoding:
      - chunked
      connection:
      - keep-alive
      date:
      - Mon, 16 Nov 2020 22:16:25 GMT
      server:
      - openresty
      access-control-allow-origin:
      - "*"
      access-control-allow-methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      access-control-expose-headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      cache-control:
      - public, max-age=120
      vary:
      - Accept-Encoding
      x-cache:
      - Miss from cloudfront
      via:
      - 1.1 23d87d8c2ce38e34462e6c134d187eeb.cloudfront.net (CloudFront)
      x-amz-cf-pop:
      - DEN50-C2
      x-amz-cf-id:
      - Cb64XwIUl61MdWjzqro134el0-mFr6xtAUlgIB8_ceiVJHxc2wTOag==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 16 Nov 2020 22:16:25 GMT
recorded_with: VCR 6.0.0
